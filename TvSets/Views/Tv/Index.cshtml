@using TvSets.Helpers
@using TvSets.Models
@model TvSets.Models.TvsetViewModel
@{
    ViewBag.Title = "Tv Table";
}

@Scripts.Render("~/bundles/tvIndex")
@Styles.Render("~/content/tvIndex")

<br/>


<div class="form-inline">
    <div class="dropdown dropdown-inline">

        <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">
            @if (@ViewBag.Tech == null)
            {
                <span>None</span>
            }
            else
            {
                @ViewBag.Tech
            }
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <li>@Html.ActionLink("OLED", "Index", new { tech = "OLED", search = ViewBag.Search, sort = ViewBag.Sort }, new { @class = "btn btn-default btn-tvTable" })</li>
            <li>@Html.ActionLink("LCD", "Index", new { tech = "LCD", search = ViewBag.Search, sort = ViewBag.Sort }, new { @class = "btn btn-default btn-tvTable" })</li>
            <li>@Html.ActionLink("Plasma", "Index", new { tech = "Plasma", search = ViewBag.Search, sort = ViewBag.Sort }, new { @class = "btn btn-default btn-tvTable" })</li>
            <li>@Html.ActionLink("Projection", "Index", new { tech = "Projection", search = ViewBag.Search, sort = ViewBag.Sort }, new { @class = "btn btn-default btn-tvTable" })</li>
            <li>@Html.ActionLink("Kinescope", "Index", new { tech = "Kinescope", search = ViewBag.Search, sort = ViewBag.Sort }, new { @class = "btn btn-default btn-tvTable" })</li>
            <li>@Html.ActionLink("None", "Index", new { tech = "", search = ViewBag.Search, sort = ViewBag.Sort }, new { @class = "btn btn-default btn-tvTable" })</li>
        </ul>

        @Html.ActionLink("Create", "Create", "Tv", new { @class = "btn btn-default btn-tvTable" })


    </div>
</div>

<br />
<br/>

<table class="table table-hover">
    <thead style="font-weight: bold">
        <tr>
            <td>Name</td>
            <td>Size</td>
            <td>Resolution</td>
            <td>Year</td>
            <td>Technology</td>
            <td style="width: 100px">@Html.ActionLink("Price", "Index", new { tech = ViewBag.Tech, sort = ViewBag.Sort == "low" ? "high" : "low", search = ViewBag.Search })</td>
            <td style="width: 150px"></td>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Tvsets)
    {
        <tr>
            <td>@Html.ActionLink(@item.Company.Name + " " + @item.Name, "View", new { id = item.Id }, null)</td>
            <td>@item.Size"</td>
            <td>@item.Resolution</td>
            <td>@item.Year</td>
            <td>@item.Technology.Name</td>
            <td>@item.Price$</td>
            <td>@Html.ActionLink("Edit", "Edit", "Tv", new { id = item.Id }, new { @class="btn btn-default btn-tvTable" })
            <button class="btn btn-danger btn-tvTable" id="btnDelete" onclick="deleteItem(@item.Id)">Delete</button></td>
        </tr>
    }
    </tbody>
</table>

<div class="btn-group">
    @Html.PageLinks(Model.PageInfo, x => Url.Action("Index", new { tech = ViewBag.Tech, search = ViewBag.Search, sort = ViewBag.Sort, page = x }))
</div>


<script type="text/javascript" src="~/Scripts/Catalog/Index/main.js"></script>
  